package assert

import (
	"testing"
)

func Panic(t *testing.T, f func(), a ...interface{}) {
	defer func() {
		if r := recover(); r == nil {
			t.Helper()
			if len(a) > 0 {
				t.Error(a...)
			} else {
				t.Error("test func should panic")
			}
		}
	}()

	f()
}

func Panicf(t *testing.T, f func(), format string, a ...interface{}) {
	defer func() {
		if r := recover(); r == nil {
			t.Helper()
			t.Errorf(format, a...)
		}
	}()

	f()
}

func NotPanic(t *testing.T, f func(), a ...interface{}) {
	defer func() {
		if r := recover(); r != nil {
			t.Helper()
			if len(a) > 0 {
				t.Error(a...)
			} else {
				t.Error("test func should not panic")
			}
		}
	}()

	f()
}

func NotPanicf(t *testing.T, f func(), format string, a ...interface{}) {
	defer func() {
		if r := recover(); r != nil {
			t.Helper()
			t.Errorf(format, a...)
		}
	}()

	f()
}
